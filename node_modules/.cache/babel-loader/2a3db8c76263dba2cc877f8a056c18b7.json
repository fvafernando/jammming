{"ast":null,"code":"import _regeneratorRuntime from \"/Users/fernandovillamarin/Documents/Studies/Codecademy - JS intensive/jammming/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/fernandovillamarin/Documents/Studies/Codecademy - JS intensive/jammming/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar clientId = 'db3a8874dd2d4eda92758c0e163dc98d'; //const clientSecret = '2eb212bba09640fa9e08432ca4ad9b4a';\n\nvar redirectURI = 'http://localhost:3000'; //let accessToken = '';\n\nvar Spotify = {\n  expirationTime: '',\n  accessToken: '',\n  getAccessTokenFromURL: function getAccessTokenFromURL() {\n    console.log(\"getAccessTokenFromURL\");\n    var currentURL = new URL(window.location.href);\n    console.log(currentURL);\n    this.expirationTime = currentURL.searchParams.get(\"expires_in\");\n    this.accessToken = currentURL.searchParams.get(\"access_token\");\n    console.log(this.accessToken);\n    return this.accessToken;\n  },\n  getAccessToken: function getAccessToken() {\n    if (this.accessToken || this.getAccessTokenFromURL()) {\n      console.log(\"Found it!\");\n      return this.accessToken;\n    } else {\n      console.log(\"Needs access token\");\n      window.location.replace(\"https://accounts.spotify.com/authorize?client_id=\".concat(clientId, \"&response_type=token&scope=playlist-modify-public&redirect_uri=\").concat(redirectURI));\n    }\n  },\n  search: function () {\n    var _search = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(term) {\n      var response, jsonResponse;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              this.accessToken = this.getAccessToken();\n              _context.next = 4;\n              return fetch(\"https://api.spotify.com/v1/search?type=track&q=\".concat(term), {\n                header: {\n                  Authorisation: \"Bearer \".concat(this.accessToken)\n                }\n              });\n\n            case 4:\n              response = _context.sent;\n\n              if (!response.ok) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 8;\n              return response.json();\n\n            case 8:\n              jsonResponse = _context.sent;\n              return _context.abrupt(\"return\", jsonResponse.tracks.map(function (track) {\n                return {\n                  id: track.id,\n                  name: track.name,\n                  artist: track.artists[0].name,\n                  album: track.album.name,\n                  uri: track.uri\n                };\n              }));\n\n            case 10:\n              throw new Error('Request Failed!');\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0.message);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 13]]);\n    }));\n\n    return function search(_x) {\n      return _search.apply(this, arguments);\n    };\n  }()\n};\nexport default Spotify;","map":{"version":3,"sources":["/Users/fernandovillamarin/Documents/Studies/Codecademy - JS intensive/jammming/src/util/Spotify.js"],"names":["clientId","redirectURI","Spotify","expirationTime","accessToken","getAccessTokenFromURL","console","log","currentURL","URL","window","location","href","searchParams","get","getAccessToken","replace","search","term","fetch","header","Authorisation","response","ok","json","jsonResponse","tracks","map","track","id","name","artist","artists","album","uri","Error","message"],"mappings":";;AAAA,IAAMA,QAAQ,GAAG,kCAAjB,C,CACA;;AACA,IAAMC,WAAW,GAAG,uBAApB,C,CACA;;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,cAAc,EAAE,EADF;AAEdC,EAAAA,WAAW,EAAE,EAFC;AAGdC,EAAAA,qBAHc,mCAGU;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,QAAMC,UAAU,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,QAAP,CAAgBC,IAAxB,CAAnB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AACA,SAAKL,cAAL,GAAsBK,UAAU,CAACK,YAAX,CAAwBC,GAAxB,CAA4B,YAA5B,CAAtB;AACA,SAAKV,WAAL,GAAmBI,UAAU,CAACK,YAAX,CAAwBC,GAAxB,CAA4B,cAA5B,CAAnB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,WAAjB;AACA,WAAO,KAAKA,WAAZ;AACD,GAXa;AAYdW,EAAAA,cAZc,4BAYG;AACf,QAAI,KAAKX,WAAL,IAAoB,KAAKC,qBAAL,EAAxB,EAAsD;AACpDC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,aAAO,KAAKH,WAAZ;AACD,KAHD,MAGO;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAG,MAAAA,MAAM,CAACC,QAAP,CAAgBK,OAAhB,4DAA4EhB,QAA5E,4EAAsJC,WAAtJ;AACD;AACF,GApBa;AAqBRgB,EAAAA,MArBQ;AAAA;AAAA;AAAA,8CAqBDC,IArBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBV,mBAAKd,WAAL,GAAmB,KAAKW,cAAL,EAAnB;AAvBU;AAAA,qBAwBaI,KAAK,0DAAmDD,IAAnD,GAA2D;AACrFE,gBAAAA,MAAM,EAAE;AACNC,kBAAAA,aAAa,mBAAY,KAAKjB,WAAjB;AADP;AAD6E,eAA3D,CAxBlB;;AAAA;AAwBJkB,cAAAA,QAxBI;;AAAA,mBA8BNA,QAAQ,CAACC,EA9BH;AAAA;AAAA;AAAA;;AAAA;AAAA,qBA+BmBD,QAAQ,CAACE,IAAT,EA/BnB;;AAAA;AA+BFC,cAAAA,YA/BE;AAAA,+CAgCDA,YAAY,CAACC,MAAb,CAAoBC,GAApB,CAAwB,UAAAC,KAAK;AAAA,uBAAK;AACvCC,kBAAAA,EAAE,EAAED,KAAK,CAACC,EAD6B;AAEvCC,kBAAAA,IAAI,EAAEF,KAAK,CAACE,IAF2B;AAGvCC,kBAAAA,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,EAAiBF,IAHc;AAIvCG,kBAAAA,KAAK,EAAEL,KAAK,CAACK,KAAN,CAAYH,IAJoB;AAKvCI,kBAAAA,GAAG,EAAEN,KAAK,CAACM;AAL4B,iBAAL;AAAA,eAA7B,CAhCC;;AAAA;AAAA,oBAuCF,IAAIC,KAAJ,CAAU,iBAAV,CAvCE;;AAAA;AAAA;AAAA;AAyCV7B,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAM6B,OAAlB;;AAzCU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AA8CA,eAAelC,OAAf","sourcesContent":["const clientId = 'db3a8874dd2d4eda92758c0e163dc98d';\n//const clientSecret = '2eb212bba09640fa9e08432ca4ad9b4a';\nconst redirectURI = 'http://localhost:3000';\n//let accessToken = '';\n\nconst Spotify = {\n  expirationTime: '',\n  accessToken: '',\n  getAccessTokenFromURL() {\n    console.log(\"getAccessTokenFromURL\");\n    const currentURL = new URL(window.location.href);\n    console.log(currentURL);\n    this.expirationTime = currentURL.searchParams.get(\"expires_in\");\n    this.accessToken = currentURL.searchParams.get(\"access_token\");\n    console.log(this.accessToken);\n    return this.accessToken;\n  },\n  getAccessToken() {\n    if (this.accessToken || this.getAccessTokenFromURL()) {\n      console.log(\"Found it!\");\n      return this.accessToken;\n    } else {\n      console.log(\"Needs access token\");\n      window.location.replace(`https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectURI}`);\n    }\n  },\n  async search(term) {\n    try {\n      this.accessToken = this.getAccessToken();\n      const response = await fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n        header: {\n          Authorisation: `Bearer ${this.accessToken}`\n        }\n      });\n\n      if (response.ok) {\n        const jsonResponse = await response.json();\n        return jsonResponse.tracks.map(track => ({\n          id: track.id,\n          name: track.name,\n          artist: track.artists[0].name,\n          album: track.album.name,\n          uri: track.uri\n        }));\n      } throw new Error('Request Failed!');\n    } catch(error) {\n      console.log(error.message);\n    }\n  }\n};\n\nexport default Spotify;\n"]},"metadata":{},"sourceType":"module"}