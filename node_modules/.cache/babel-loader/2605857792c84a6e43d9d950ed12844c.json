{"ast":null,"code":"var clientId = 'db3a8874dd2d4eda92758c0e163dc98d';\nvar clientSecret = '2eb212bba09640fa9e08432ca4ad9b4a';\nvar redirectURI = 'http://localhost:3000/';\nvar accessToken = '';\nSpotify = {\n  expirationTime: '',\n  getAccessTokenFromURL: function getAccessTokenFromURL() {\n    var currentURL = new URL(window.location.href);\n    expirationTime = currentURL.searchParams.get(\"expires_in\");\n    return currentURL.searchParams.get(\"access_token\");\n  },\n  getAccessTokenFromAPI: function getAccessTokenFromAPI() {\n    // do stuff\n    console.log(\"nothing yet\");\n  },\n  getAccessToken: function getAccessToken() {\n    if (accessToken || this.getAccessTokenFromURL()) {\n      console.log(\"Found it!\");\n      return accessToken;\n    } else {\n      console.log(\"Needs access token\");\n      getAccessTokenFromAPI();\n      window.location.replace(\"https://accounts.spotify.com/authorize?client_id=\".concat(clientId, \"&response_type=token&scope=playlist-modify-public&redirect_uri=\").concat(redirectURI));\n    }\n  },\n  search: function search(term) {\n    return fetch(\"https://api.spotify.com/v1/search?type=track&q=\".concat(term), {\n      header: {\n        Authorisation: \"Bearer \".concat(accessToken)\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (jsonResponse) {\n      if (jsonResponse.tracks) {\n        return jsonResponse.tracks.map(function (track) {\n          return {\n            id: track.id,\n            name: track.name,\n            artist: track.artists[0].name,\n            album: track.album.name,\n            uri: track.uri\n          };\n        });\n      }\n    });\n  }\n};\nexport default Spotify;","map":{"version":3,"sources":["/Users/fernandovillamarin/Documents/Studies/Codecademy - JS intensive/jammming/src/util/Spotify.js"],"names":["clientId","clientSecret","redirectURI","accessToken","Spotify","expirationTime","getAccessTokenFromURL","currentURL","URL","window","location","href","searchParams","get","getAccessTokenFromAPI","console","log","getAccessToken","replace","search","term","fetch","header","Authorisation","then","response","json","jsonResponse","tracks","map","track","id","name","artist","artists","album","uri"],"mappings":"AAAA,IAAMA,QAAQ,GAAG,kCAAjB;AACA,IAAMC,YAAY,GAAG,kCAArB;AACA,IAAMC,WAAW,GAAG,wBAApB;AACA,IAAMC,WAAW,GAAG,EAApB;AAEAC,OAAO,GAAG;AACRC,EAAAA,cAAc,EAAE,EADR;AAERC,EAAAA,qBAFQ,mCAEgB;AACtB,QAAMC,UAAU,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,QAAP,CAAgBC,IAAxB,CAAnB;AACAN,IAAAA,cAAc,GAAGE,UAAU,CAACK,YAAX,CAAwBC,GAAxB,CAA4B,YAA5B,CAAjB;AACA,WAAON,UAAU,CAACK,YAAX,CAAwBC,GAAxB,CAA4B,cAA5B,CAAP;AACD,GANO;AAORC,EAAAA,qBAPQ,mCAOgB;AACtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,GAVO;AAWRC,EAAAA,cAXQ,4BAWS;AACf,QAAId,WAAW,IAAI,KAAKG,qBAAL,EAAnB,EAAiD;AAC/CS,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,aAAOb,WAAP;AACD,KAHD,MAGO;AACLY,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAF,MAAAA,qBAAqB;AACrBL,MAAAA,MAAM,CAACC,QAAP,CAAgBQ,OAAhB,4DAA4ElB,QAA5E,4EAAsJE,WAAtJ;AACD;AACF,GApBO;AAqBRiB,EAAAA,MArBQ,kBAqBDC,IArBC,EAqBK;AACX,WAAOC,KAAK,0DAAmDD,IAAnD,GAA2D;AACrEE,MAAAA,MAAM,EAAE;AACNC,QAAAA,aAAa,mBAAYpB,WAAZ;AADP;AAD6D,KAA3D,CAAL,CAIJqB,IAJI,CAIC,UAAAC,QAAQ,EAAI;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KANM,EAMJF,IANI,CAMC,UAAAG,YAAY,EAAI;AACtB,UAAGA,YAAY,CAACC,MAAhB,EAAwB;AACtB,eAAOD,YAAY,CAACC,MAAb,CAAoBC,GAApB,CAAwB,UAAAC,KAAK;AAAA,iBAAK;AACvCC,YAAAA,EAAE,EAAED,KAAK,CAACC,EAD6B;AAEvCC,YAAAA,IAAI,EAAEF,KAAK,CAACE,IAF2B;AAGvCC,YAAAA,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,EAAiBF,IAHc;AAIvCG,YAAAA,KAAK,EAAEL,KAAK,CAACK,KAAN,CAAYH,IAJoB;AAKvCI,YAAAA,GAAG,EAAEN,KAAK,CAACM;AAL4B,WAAL;AAAA,SAA7B,CAAP;AAOD;AACF,KAhBM,CAAP;AAiBD;AAvCO,CAAV;AA0CA,eAAehC,OAAf","sourcesContent":["const clientId = 'db3a8874dd2d4eda92758c0e163dc98d';\nconst clientSecret = '2eb212bba09640fa9e08432ca4ad9b4a';\nconst redirectURI = 'http://localhost:3000/';\nconst accessToken = '';\n\nSpotify = {\n  expirationTime: '',\n  getAccessTokenFromURL() {\n    const currentURL = new URL(window.location.href);\n    expirationTime = currentURL.searchParams.get(\"expires_in\");\n    return currentURL.searchParams.get(\"access_token\");\n  },\n  getAccessTokenFromAPI() {\n    // do stuff\n    console.log(\"nothing yet\");\n  },\n  getAccessToken() {\n    if (accessToken || this.getAccessTokenFromURL()) {\n      console.log(\"Found it!\");\n      return accessToken;\n    } else {\n      console.log(\"Needs access token\");\n      getAccessTokenFromAPI();\n      window.location.replace(`https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectURI}`);\n    }\n  },\n  search(term) {\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      header: {\n        Authorisation: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if(jsonResponse.tracks) {\n        return jsonResponse.tracks.map(track => ({\n          id: track.id,\n          name: track.name,\n          artist: track.artists[0].name,\n          album: track.album.name,\n          uri: track.uri\n        }));\n      }\n    });\n  }\n};\n\nexport default Spotify;\n"]},"metadata":{},"sourceType":"module"}